% plots and stats about behavioral performance

clear
clc
close all

P = getParameters();
Paths = P.Paths;
Participants = P.Participants;
Sessions = P.Sessions;
PlotProps = P.Manuscript;

Labels = P.Labels;
StatsP = P.StatsP;

TitleTag = 'Behavior';



%%% Load data

TaskData = fullfile(Paths.Data, 'Behavior', 'Oddball_Trials.mat');
if ~exist(TaskData, 'file') || Refresh
    AllAnswers = importOddball(Paths.Datasets, Task, fullfile(Paths.Data, 'Behavior'));
    Answers = cleanupOddball(AllAnswers);
    Answers = fixRTs(Answers, Paths);
    save(TaskData, 'Answers')
else
    load(TaskData, 'Answers')
end

% TEMP FIX
Answers.Type(strcmp(Answers.condition, "Target") & isnan(Answers.keyPress)) = 4;


Results = fullfile(Paths.Results, 'Behavior');
if ~exist(Results, 'dir')
    mkdir(Results)
end



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Plot



%% Figure X, Behavior data

Grid = [4, 1];

figure('Units','centimeters','Position',[0 0 PlotProps.W*0.5, PlotProps.H])


%%% RTs
[Data, ~] = tabulateTable(Answers, 'RT', 'mean', Participants, Sessions, []); % TODO: copy function from Paper1 repo

A = subfigure([], Grid, [1, 1], [], true, ...
    PlotProps.Indexes.Letters{1}, PlotProps);
plotBrokenSpaghetti(Data, [], [], [], PlotProps.Color.Participants, PlotProps)
title('Reaction Times', 'FontSize', PlotProps.Text.TitleSize)
ylabel('Seconds')


%%% STD RTs
[Data, ~] = tabulateTable(Answers, 'RT', 'std', Participants, Sessions, []);

A = subfigure([], Grid, [2, 1], [], true, ...
    PlotProps.Indexes.Letters{2}, PlotProps);
plotBrokenSpaghetti(Data, [], [], [], PlotProps.Color.Participants, PlotProps)
title('RT Standard Deviations', 'FontSize', PlotProps.Text.TitleSize)
ylabel('Seconds')


%%% Lapses

[Matrix, Things] = tabulateTable(Answers, 'Type', 'tabulate', Participants, Sessions, []);

% remove extra false alarm generated by start of task
Matrix(:, :, 3) = Matrix(:, :, 3)-1;

Data = squeeze(Matrix(:, :, 4));

A = subfigure([], Grid, [3, 1], [], true, ...
    PlotProps.Indexes.Letters{3}, PlotProps);
plotBrokenSpaghetti(Data, [], [], [], PlotProps.Color.Participants, PlotProps)
title('Lapses', 'FontSize', PlotProps.Text.TitleSize)
ylabel('# of lapses')

%%% Performance

% calculate performance (1-[FA+Lapses]/Tot)
Matrix(:, :, 5) = 1 - (Matrix(:, :, 3)+Matrix(:, :, 4))/199;

Data = squeeze(Matrix(:, :, 5));

A = subfigure([], Grid, [4, 1], [], true, ...
    PlotProps.Indexes.Letters{4}, PlotProps);
plotBrokenSpaghetti(Data, [], [], [], PlotProps.Color.Participants, PlotProps)
title('Performance', 'FontSize', PlotProps.Text.TitleSize)
ylabel('% incorrect trials') % TOCHECK

saveFig(Paths.Paper, [TitleTag, '_main_raw'], PlotProps)














