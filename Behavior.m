% scripts plotting the response times, lapses and false alarms of the
% auditory oddball

clear
clc
close all


Refresh = false;

P = getParameters();
Paths = P.Paths;
Task = 'Oddball';
Participants = P.Participants;
Sessions = P.Sessions;
PlotProps = P.Powerpoint;

TaskData = fullfile(Paths.Data, 'Behavior', 'Oddball_Trials.mat');
if ~exist(TaskData, 'file') || Refresh
    AllAnswers = importOddball(Paths.Datasets, Task, fullfile(Paths.Data, 'Behavior'));
    Answers = cleanupOddball(AllAnswers);
    Answers = fixRTs(Answers, Paths);
    save(TaskData, 'Answers')
else
    load(TaskData, 'Answers')
end

Results = fullfile(Paths.Results, 'Behavior');
if ~exist(Results, 'dir')
    mkdir(Results)
end
TitleTag = 'Behavior';

%%% plots
% TEMP FIX
Answers.Type(strcmp(Answers.condition, "Target") & isnan(Answers.keyPress)) = 4;

Variables = {
'RT',   1;
'sdRT', 1;
'Lapses', 1;
'FalseAlarms', 1;
'Performance', -1};

nVariables = size(Variables, 1);
AllData = nan(numel(Participants), nVariables, 2);

%% Plot reaction times

[Means, ~] = tabulateTable(Answers, 'RT', 'mean', Participants, Sessions, []);

 figure('Units','normalized', 'Position', [0 0 .5 .7])
data2D('line', Means, P.Labels.Sessions, [], [], PlotProps.Color.Participants, P.StatsP, PlotProps);
title('Reaction Times', 'FontSize', PlotProps.Text.TitleSize)
ylabel('Seconds')
saveFig(strjoin({TitleTag, 'All', 'BySession', 'RT'}, '_'), Results, PlotProps)

Data = zScoreData(Means, 'first');
 figure('Units','normalized', 'Position', [0 0 .5 .7])
data2D('line', Data, P.Labels.Sessions, [], [], PlotProps.Color.Participants, P.StatsP, PlotProps);
title('Reaction Times', 'FontSize', PlotProps.Text.TitleSize)
ylabel('z-score')
saveFig(strjoin({TitleTag, 'All', 'BySession', 'RT', 'zscore'}, '_'), Results, PlotProps)


AllData(:, )
%% RT variability

[STD, ~] = tabulateTable(Answers, 'RT', 'std', Participants, Sessions, []);

 figure('Units','normalized', 'Position', [0 0 .5 .7])
data2D('line', STD, P.Labels.Sessions, [], [], PlotProps.Color.Participants, P.StatsP, PlotProps)
title('Reaction Times Standard Deviation', 'FontSize', PlotProps.Text.TitleSize)
ylabel('Seconds')
saveFig(strjoin({TitleTag, 'All', 'BySession', 'RT', 'var'}, '_'), Results, PlotProps)

Data = zScoreData(STD, 'first');
 figure('Units','normalized', 'Position', [0 0 .5 .7])
data2D('line', Data, P.Labels.Sessions, [], [], PlotProps.Color.Participants, P.StatsP, PlotProps)
title('Reaction Times Standard Deviation', 'FontSize', PlotProps.Text.TitleSize)
ylabel('z-score')
saveFig(strjoin({TitleTag, 'All', 'BySession', 'RT', 'std', 'zscore'}, '_'), Results, PlotProps)


[STD, ~] = tabulateTable(Answers, 'RT', 'std', Participants, Sessions, []);


Var = STD./Means;

 figure('Units','normalized', 'Position', [0 0 .5 .7])
data2D('line', Var, P.Labels.Sessions, [], [], PlotProps.Color.Participants, P.StatsP, PlotProps)
title('Reaction Times Variation', 'FontSize', PlotProps.Text.TitleSize)
ylabel('Coefficient of variation')
saveFig(strjoin({TitleTag, 'All', 'BySession', 'RT', 'var'}, '_'), Results, PlotProps)

Data = zScoreData(Var, 'first');
 figure('Units','normalized', 'Position', [0 0 .5 .7])
data2D('line', Data, P.Labels.Sessions, [], [], PlotProps.Color.Participants, P.StatsP, PlotProps)
title('Reaction Times Variability', 'FontSize', PlotProps.Text.TitleSize)
ylabel('z-score')
saveFig(strjoin({TitleTag, 'All', 'BySession', 'RT', 'var', 'zscore'}, '_'), Results, PlotProps)


%% response types

[Matrix, Things] = tabulateTable(Answers, 'Type', 'tabulate', Participants, Sessions, []);

% remove extra false alarm generated by start of task
Matrix(:, :, 3) = Matrix(:, :, 3)-1;
Matrix(:, :, 5) = 1 - (Matrix(:, :, 3)+Matrix(:, :, 4))/199;


Types = {'CorrectRejection', 'CorrectResponse', 'FalseAlarm', 'Lapse', 'Performance'};

Colors = repmat(getColors(1, '', 'blue'), numel(Participants), 1);
Female = strcmp(P.Gender, 'F');
Colors(Female, :) = repmat(getColors(1, '', 'pink'), nnz(Female), 1);

for Indx_T = 1:5

    Data = squeeze(Matrix(:, :, Indx_T));
 figure('Units','normalized', 'Position', [0 0 .5 .7])
data2D('line', Data, P.Labels.Sessions, [], [], PlotProps.Color.Participants, P.StatsP, PlotProps);
title(Types{Indx_T}, 'FontSize', PlotProps.Text.TitleSize)
ylabel('#')
saveFig(strjoin({TitleTag, 'All', 'BySession', Types{Indx_T} }, '_'), Results, PlotProps)

Data = zScoreData(Data, 'first');
 figure('Units','normalized', 'Position', [0 0 .5 .7])
data2D('line', Data, P.Labels.Sessions, [], [], PlotProps.Color.Participants, P.StatsP, PlotProps);
title(Types{Indx_T}, 'FontSize', PlotProps.Text.TitleSize)
ylabel('z-score')
saveFig(strjoin({TitleTag, 'All', 'BySession', Types{Indx_T}, 'zscore'}, '_'), Results, PlotProps)

%  figure('Units','normalized', 'Position', [0 0 .5 .7])
%     Stats = groupDiff(Data, P.Labels.Sessions, [], [], Colors, P.StatsP, PlotProps);
end

